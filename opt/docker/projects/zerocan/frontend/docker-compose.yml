services:
  nginx:
    container_name: ${PREFIX}-frontend-nginx
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "8300:3000"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/site.conf:/etc/nginx/conf.d/site.conf
      - ./logs:/app/logs
    depends_on:
      - frontend-1
      - frontend-2
    networks:
      - app-network
    environment:
      - TZ=Asia/Seoul
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "10"

  frontend-1:
    container_name: ${PREFIX}-frontend-1
    image: ${PREFIX}-frontend:latest
    build:
      context: ./repo
      dockerfile: Dockerfile.prod
    restart: unless-stopped
    networks:
      - app-network
    environment:
      - TZ=Asia/Seoul
      - NODE_ENV=production
      - INSTANCE_ID=1
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./logs:/app/logs
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:3000" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "10"

  frontend-2:
    container_name: ${PREFIX}-frontend-2
    image: ${PREFIX}-frontend:latest
    # build: frontend-1 이미지 재사용
    restart: unless-stopped
    networks:
      - app-network
    environment:
      - TZ=Asia/Seoul
      - NODE_ENV=production
      - INSTANCE_ID=2
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./logs:/app/logs
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:3000" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "10"

networks:
  app-network:
    name: ${PREFIX}-network
    external: true

volumes:
  node-modules-cache:
    name: ${PREFIX}-node-modules-cache
