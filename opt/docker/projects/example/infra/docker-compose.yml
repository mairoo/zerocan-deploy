services:
  redis:
    container_name: ${PREFIX}-redis
    image: redis:alpine
    restart: unless-stopped
    volumes:
      - redis-data:/data
    networks:
      - app-network
    environment:
      - TZ=Asia/Seoul
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "10"

  keycloak-postgres:
    container_name: ${PREFIX}-keycloak-postgres
    image: postgres:15-alpine
    restart: unless-stopped
    ports:
      - "15432:5432"
    volumes:
      - keycloak-postgres-data:/var/lib/postgresql/data
    networks:
      - app-network
    environment:
      - TZ=Asia/Seoul
      - POSTGRES_DB=${KEYCLOAK_POSTGRES_DATABASE}
      - POSTGRES_USER=${KEYCLOAK_POSTGRES_USER}
      - POSTGRES_PASSWORD=${KEYCLOAK_POSTGRES_PASSWORD}
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "10"

  keycloak:
    container_name: ${PREFIX}-keycloak
    image: quay.io/keycloak/keycloak:26.3.1
    restart: unless-stopped
    ports:
      - "8801:8080"
    depends_on:
      - keycloak-postgres
    networks:
      - app-network
    environment:
      - TZ=Asia/Seoul
      - KC_DB=${KEYCLOAK_DB}
      - KC_DB_URL=${KEYCLOAK_DB_URL}
      - KC_DB_USERNAME=${KEYCLOAK_POSTGRES_USER}
      - KC_DB_PASSWORD=${KEYCLOAK_POSTGRES_PASSWORD}
      - KC_HOSTNAME=keycloak.example.com # 운영환경: 고정 hostname 설정
      # - KC_HOSTNAME_STRICT=false # 개발환경: 유연한 hostname 처리
      - KC_PROXY_ADDRESS_FORWARDING=true # 프록시 환경에서 클라이언트 IP 올바르게 인식
      - KC_PROXY_HEADERS=xforwarded # X-Forwarded-* 헤더 사용 설정
      - KC_HTTP_ENABLED=true # HTTP 연결 허용 (프록시 환경 필수)
      - KC_CACHE=local # 단일 인스턴스 로컬 캐시 사용
    # Docker 컨테이너가 새로 시작될 때마다 = 최초 실행으로 인식
    # --optimized는 이미 빌드된 설정이 있을 때만 사용 가능
    command: start 
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "10"

networks:
  app-network:
    name: ${PREFIX}-network
    driver: bridge

volumes:
  redis-data:
    name: ${PREFIX}-redis-data
  keycloak-postgres-data:
    name: ${PREFIX}-keycloak-postgres-data
